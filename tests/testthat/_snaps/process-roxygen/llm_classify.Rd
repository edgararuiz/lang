% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/llm-classify.R
\name{llm_classify}
\alias{llm_classify}
\alias{llm_vec_classify}
\title{Categorizar los datos como una de las opciones dadas.}
\usage{
llm_classify(
  .data,
  col,
  labels,
  pred_name = ".classify",
  additional_prompt = ""
)

llm_vec_classify(x, labels, additional_prompt = "", preview = FALSE)
}
\arguments{
\item{.data}{Datos de una tabla o data frame que contiene el texto a ser
analizado.}

\item{col}{El nombre del campo para analizar, soporta 'tidy-eval'.}

\item{labels}{Etiquetas un vector de caracteres con al menos 2 etiquetas
para clasificar el texto}

\item{pred_name}{Nombre del nuevo colón donde se colocará la predicción}

\item{additional_prompt}{"Inserte este texto en el promedio que se envió a
la LLM."}

\item{x}{Veces de texto para ser analizado}

\item{preview}{Devuelve el llamado R que habría sido utilizado para
ejecutar la predicción. Solo devuelve el primer registro de \code{x}. Por
defecto es \code{FALSO}. Aplica solo a funciones de vector.}
}
\value{
llm_classify devuelve un data.frame o tbl objeto, mientras que
llm_vec_classify devuelve un vector con el mismo largo que x.
}
\description{
"Utiliza un modelo de lenguaje grande para clasificar el
texto proporcionado como uno de los opciones ofrecidas a través del
argumento \code{labels}."
}
\examples{
\donttest{
library(mall)

data("reviews")

llm_use("ollama", "llama3.2", seed = 100, .silent = TRUE)

llm_classify(reviews, review, c("appliance", "computer"))

# Use 'pred_name' to customize the new column's name
llm_classify(
  reviews,
  review,
  c("appliance", "computer"),
  pred_name = "prod_type"
)

# Pass custom values for each classification
llm_classify(reviews, review, c("appliance" ~ 1, "computer" ~ 2))

# For character vectors, instead of a data frame, use this function
llm_vec_classify(
  c("this is important!", "just whenever"),
  c("urgent", "not urgent")
)

# To preview the first call that will be made to the downstream R function
llm_vec_classify(
  c("this is important!", "just whenever"),
  c("urgent", "not urgent"),
  preview = TRUE
)
}
}
